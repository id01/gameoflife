function createHoles(){console.log("Using Classic Map.")}function pos(e,t){return e+t*gridw}function changeTurn(){turn=(turn<<1)%3,actionButton.onclick=void 0,actionButton.style.backgroundColor="#ffffff",actionButton.innerHTML="Select a cell",actionButton.disabled=!0}function select(){if(actionButton.disabled=!1,burning&&!this.classList.contains("deadcell"))turn==RED&&this.classList.contains("redcell")?this.classList.add("toburn"):turn==BLUE&&this.classList.contains("bluecell")?this.classList.add("toburn"):gameLog.innerHTML+="You can only burn your own cells!<br/>\n";else{burning=!1;for(var t=document.querySelectorAll(".cell"),e=0;e<t.length;e++)t[e].classList.remove("selected"),t[e].classList.remove("toburn");this.classList.contains("deadcell")?(actionButton.innerHTML="Burn!",actionButton.onclick=burn,actionButton.style.backgroundColor="#f49242"):(actionButton.innerHTML="Kill!",actionButton.onclick=kill,actionButton.style.backgroundColor="#999999"),this.classList.add("selected")}}function getNeighbors(n,l){for(var r=[0,0,0],e=n-1;n+1>=e;e++)for(var t=l-1;l+1>=t;t++)(e!=n||t!=l)&&(0>e||0>t||e>=gridw||t>=gridh||cells[pos(e,t)]>0&&(r[0]++,r[cells[pos(e,t)]]++));return r}function draw(){var s,a,e,t;s=document.getElementById("celltable"),s.innerHTML="";for(var l=0;gridh>l;l++){a=document.createElement("tr");for(var r=0;gridw>r;r++)t=getNeighbors(r,l),e=document.createElement("td"),e.onclick=select,e.setAttribute("x",r),e.setAttribute("y",l),cells[pos(r,l)]==RED?(e.setAttribute("class","cell redcell"),e.style.color=3==t[0]||2==t[0]?"#dddddd":"#000000",e.innerHTML=t[0]):cells[pos(r,l)]==BLUE?(e.setAttribute("class","cell bluecell"),e.style.color=3==t[0]||2==t[0]?"#dddddd":"#000000",e.innerHTML=t[0]):cells[pos(r,l)]==DEAD?(e.setAttribute("class","cell deadcell"),e.style.color=3==t[0]?t[RED]>=2?"#ff0000":t[BLUE]>=2?"#0000ff":"#00ff00":"#000000",e.innerHTML=t[0]):cells[pos(r,l)]==NATURAL?(e.setAttribute("class","cell naturalcell"),e.style.color=3==t[0]||2==t[0]?"#dddddd":"#000000",e.innerHTML=t[0]):(e.setAttribute("class","hole"),e.onclick=void 0),a.appendChild(e);e=document.createElement("br"),a.appendChild(e),s.appendChild(a)}document.getElementById("turnspan").innerHTML="Turn: ",turn==RED?(document.getElementById("turnspan").innerHTML+="RED",document.getElementById("turnspan").style.color="red"):(document.getElementById("turnspan").innerHTML+="BLUE",document.getElementById("turnspan").style.color="blue");var n=document.querySelectorAll(".redcell").length,o=document.querySelectorAll(".bluecell").length,c=document.querySelectorAll(".naturalcell").length;document.getElementById("redcount").innerHTML=n,document.getElementById("bluecount").innerHTML=o,document.getElementById("natcount").innerHTML=c,document.getElementById("allcount").innerHTML=n+o+c;var i=document.getElementById("redbar"),d=document.getElementById("bluebar"),u=document.getElementById("natbar");i.style.width=n/(n+o+c)*800+"px",u.style.width=c/(n+o+c)*800+"px",d.style.width=o/(n+o+c)*800+"px",n+o==0?document.body.innerHTML=0==c?"The world has been destroyed!":"Nature rules all!":0==o?document.body.innerHTML="The red cells have dominated!":0==n&&(document.body.innerHTML="The blue cells are victorious!")}function iterate(){for(var e,t,r=new Int8Array(grids),n=0;gridh>n;n++)for(var l=0;gridw>l;l++)t=pos(l,n),e=getNeighbors(l,n),r[t]=0==cells[t]?3==e[0]?e[RED]>=2?RED:e[BLUE]>=2?BLUE:NATURAL:0:cells[t]>0&&2!=e[0]&&3!=e[0]?0:cells[t];cells=r,burning=!1,draw()}function spawn(){for(var e=0;grids/2>e;e++)cells[e]=Math.floor(6*Math.random()),cells[e]>=4&&(cells[e]=0),3==cells[e]&&Math.random()>.65&&(cells[e]=0),cells[grids-e-1]=2*cells[e]-3*Math.floor(cells[e]/2);if(iterate(),document.querySelectorAll(".redcell").length+document.querySelectorAll(".bluecell").length<.9*Math.pow(gridw*gridh,.75)||document.querySelectorAll(".naturalcell").length<.4*Math.pow(gridw*gridh,.75))setTimeout(spawn,50);else{var t=document.querySelectorAll(".deadcell"),n=t[Math.floor(Math.random()*t.length)],l=parseInt(n.getAttribute("x")),r=parseInt(n.getAttribute("y"));cells[pos(l,r)]=BLUE,gameLog.innerHTML+="Blue Extra Cell @ ("+l+", "+r+")"}createHoles(),draw()}function kill(){var e=document.querySelector(".selected");if(null!=e)if(e.classList.contains("deadcell"))gameLog.innerHTML+="You cannot kill a dead cell.<br/>\n";else{var t=parseInt(e.getAttribute("x")),n=parseInt(e.getAttribute("y"));cells[pos(t,n)]=DEAD,gameLog.innerHTML+=turn==RED?"RED killed a cell at ("+t+", "+n+")<br/>\n":"BLUE killed a cell at ("+t+", "+n+")<br/>\n",draw(),changeTurn(),setTimeout(iterate,333)}}function burn(){if(burning){var n=document.querySelectorAll(".toburn");if(n.length>=2){var l=document.querySelector(".selected"),e=parseInt(l.getAttribute("x")),t=parseInt(l.getAttribute("y"));gameLog.innerHTML+=turn==RED?"RED burned some cells to create one at ("+e+", "+t+")<br/>\n":"BLUE burned some cells to create one at ("+e+", "+t+")<br/>\n",cells[pos(e,t)]=turn;for(var r=0;r<n.length;r++)e=parseInt(n[r].getAttribute("x")),t=parseInt(n[r].getAttribute("y")),cells[pos(e,t)]=DEAD;draw(),changeTurn(),setTimeout(iterate,333)}else gameLog.innerHTML+="Not enough cells! Select at least 2 cells for burning.<br/>\n"}else{var l=document.querySelector(".selected");null!=l&&l.classList.contains("deadcell")?(gameLog.innerHTML+="Player is burning!<br/>\n",burning=!0):gameLog.innerHTML+="Select an empty tile to start burn.<br/>\n"}}function setupFunction(){actionButton=document.getElementById("actionbutton"),gameLog=document.getElementById("gamelog"),changeTurn(),turn=RED;var e=document.createElement("script");e.onload=void 0,""!=window.location.search.replace("?","")?(e.src="maps/"+window.location.search.replace("?","")+".js",e.onload=spawn,document.body.appendChild(e)):setTimeout(spawn,1)}const HOLE=-1,DEAD=0,RED=1,BLUE=2,NATURAL=3;var gridw=24,gridh=24,grids=gridw*gridh,cells=new Int8Array(grids),turn=0,burning=!1,actionButton=null,gameLog=null;